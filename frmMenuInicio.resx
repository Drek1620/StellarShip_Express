<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="iconButton2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rjDropdownMenu1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>